version: "3.8"

services:
    webapp:
        image: thiernoamiroud/dropwizarh-hibernate-prometheus
        container_name: java-webapp
        ports:
            - 8080:8080
            - 8081:8081
            - 8090:8090
        networks:
            - prometheus-network
        env_file:
            - database.env
        environment:
            - POSTGRES_DB=dropwizard
            - POSTGRES_HOST=postgres
            - EHCACHE_CONFIG=ehcache.xml

    db:
        image: postgres
        container_name: postgres
        ports:
            - 5432:5432
        networks:
            -   prometheus-network
#        volumes:
#            - ./data/db:/var/lib/postgresql/data
        env_file:
            - database.env
        environment:
            - POSTGRES_DB=dropwizard

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        ports:
            - 9090:9090
        networks:
            - prometheus-network
        volumes:
            - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./conf/prometheus/rules/:/etc/prometheus/rules/
        command: [ "--web.enable-lifecycle",
                   "--config.file=/etc/prometheus/prometheus.yml",
                   "--storage.tsdb.path=/prometheus",
                   "--web.console.libraries=/usr/share/prometheus/console_libraries",
                   "--web.console.templates=/usr/share/prometheus/consoles" ]
    #        docker run -p 9090:9090 -it --name prometheus --rm --network docker-compose_prometheus-network -v `pwd`/docker-compose/conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus \
    #        --web.enable-lifecycle \
    #        --config.file=/etc/prometheus/prometheus.yml \
    #        --storage.tsdb.path=/prometheus \
    #        --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles

    prometheus-node-exporter:
        image: prom/node-exporter
        container_name: prometheus-node-exporter
        ports:
            - 9100:9100
        networks:
            - prometheus-network

    prometheus-alertmanager:
        image: prom/alertmanager
        container_name: prometheus-alertmanager
        ports:
            - 9093:9093
        networks:
            - prometheus-network
        volumes:
            - ./conf/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml

    grafana:
        image: grafana/grafana-enterprise
        container_name: grafana
        ports:
            - 3000:3000
        networks:
            - prometheus-network

networks:
    prometheus-network: